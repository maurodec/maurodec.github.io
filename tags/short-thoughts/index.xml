<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Short Thoughts on Blog - maurodec.com</title>
    <link>http://maurodec.com/tags/short-thoughts/</link>
    <description>Recent content in Short Thoughts on Blog - maurodec.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://maurodec.com/tags/short-thoughts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Short Thoughts: I miss the old Internet</title>
      <link>http://maurodec.com/blog/i-miss-the-old-internet/</link>
      <pubDate>Sun, 26 May 2024 00:00:00 +0000</pubDate>
      
      <guid>http://maurodec.com/blog/i-miss-the-old-internet/</guid>
      <description>&lt;p&gt;Maybe it&amp;rsquo;s nostalgia talking and looking at the past with rose colored glasses,
but I miss the old, unmonetized, Internet.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Short Thoughts: The existential horror of Progress Bars</title>
      <link>http://maurodec.com/blog/progress-bars/</link>
      <pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://maurodec.com/blog/progress-bars/</guid>
      <description>&lt;p&gt;Progress bars are UI elements that have been in use for decades. They are
so commonplace that not only we don&amp;rsquo;t question them, but we also expect them
to be there. However, are they actually any good? Do we need them?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Short Thoughts: keep your tests simple</title>
      <link>http://maurodec.com/blog/keep-tests-simple/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://maurodec.com/blog/keep-tests-simple/</guid>
      <description>&lt;p&gt;Writing good tests, whether they are unit, acceptance, integration etc, is
hard. Few tests will run quickly but probably won&amp;rsquo;t cover much of the code,
however, having high coverage doesn&amp;rsquo;t mean your tests are good either.
The way tests are written also depends on what the software and it&amp;rsquo;s structure
is. Notwithstanding, there&amp;rsquo;s one aspect that I believe always helps,
simplicity.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
