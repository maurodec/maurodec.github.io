<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Blog - maurodec.com</title>
    <link>http://maurodec.com/tags/java/</link>
    <description>Recent content in Java on Blog - maurodec.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 04 Mar 2017 00:00:00 -0300</lastBuildDate>
    
	<atom:link href="http://maurodec.com/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Android Handlers, Loopers, Message Queues and communication between Threads</title>
      <link>http://maurodec.com/blog/android-handlers/</link>
      <pubDate>Sat, 04 Mar 2017 00:00:00 -0300</pubDate>
      
      <guid>http://maurodec.com/blog/android-handlers/</guid>
      <description>&lt;p&gt;In Android applications, as well as in applications with a GUI in general,
doing work in the background is essential as we do not want the UI to be
blocked by long running tasks that may cause it to appear to be frozen.
The Android Framework provides a simple but interesting mechanism for
communicating with background threads via the use of the &lt;code&gt;Message&lt;/code&gt; and
&lt;code&gt;Handler&lt;/code&gt; classes. In this post I will attempt to explain not only how to use
them, but also how they relate to the &lt;code&gt;Looper&lt;/code&gt; and the &lt;code&gt;MessageQueue&lt;/code&gt;
classes.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>